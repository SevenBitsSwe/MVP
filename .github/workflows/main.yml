name: Docker Tests & Quality Checks

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

permissions:
  contents: write  

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
      with:
          ref: ${{ github.head_ref || github.ref }}  # Ensures proper branch checkout
          fetch-depth: 0  # Get full git history


    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Build and run tests with Docker Compose
      run: |
        docker compose --profile test build
        docker compose --profile test run test

    - name: Prepare coverage directory
      run: |
        mkdir -p ./.github/reports

    - name: Copy coverage reports from container
      run: |
        # Cerca anche container fermati (non solo in esecuzione)
        container_id=$(docker ps -a -q --filter "name=.*test.*" --latest)
        if [ -n "$container_id" ]; then
          echo "Copying coverage from container $container_id"
          # List contents of /app/reports directory in container
          docker exec $container_id ls -la /app/reports || echo "Failed to list contents of /app/reports"
          docker cp $container_id:/app/reports/coverage.xml ./.github/reports/coverage.xml || echo "Failed to copy coverage.xml file"
          docker cp $container_id:/app/reports/pylint_report.txt ./.github/reports || echo "Failed to copy pylint_report.txt file"
          docker cp $container_id:/app/reports/report.json ./.github/reports/ || echo "Failed to copy report json files"
          # Rimuovi manualmente il container dopo la copia
          docker rm $container_id
        else
          echo "Test container not found!"
          exit 1
        fi
    
    - name: Set up Python
      uses: actions/setup-python@v5 
      with:
        python-version: '3.12.2'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install matplotlib

    - name: Create charts based on recent reports
      run: |
        python .github/reports/createCharts.py

    - name: Push reports to .github/reports
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git add .github/reports/coverage.xml || true
        git add .github/reports/pylint_report.txt || true
        git add .github/reports/report.json || true
        git add .github/reports/metrics_attributes.png || true
        git add .github/reports/metrics_fan_in.png || true
        git add .github/reports/metrics_fan_out.png || true
        git add .github/reports/metrics_lines.png || true
        git add .github/reports/metrics_parameters.png || true
        git commit -m "Aggiunta report" || true
        git push || true

    - name: Upload coverage to Coveralls
      uses: coverallsapp/github-action@v2
      with:
        github-token: ${{ secrets.COVERALLS_REPO_TOKEN }}
        file: .github/reports/coverage.xml
        format: cobertura

    - name: List files in directory
      run: |
        cat .github/reports/pylint_report.txt

    - name: Create badges and put in README.md
      uses: actions/setup-python@v5
      with: 
        python-version: '3.12.2'
    - run: |
        python readmeBadges.py
      
    - name: Push README with changed badges to origin
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        if [[ $(git diff --name-only 'README.md') ]]; then
          git add README.md
          git commit -m "Update README badges"
          git push 
        else
          echo "No changes to README.md, skipping commit and push."
        fi
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
